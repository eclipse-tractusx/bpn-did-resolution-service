#################################################################################
#  Copyright (c) 2023 Mercedes-Benz Tech Innovation GmbH
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Verify"

on:
  workflow_call:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  verify-helm-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: addnab/docker-run-action@v3
        with:
          image: jnorwood/helm-docs:v1.14.2
          options: -v ${{ github.workspace }}/charts:/helm-docs
          run: helm-docs --log-level debug

      - run: |
          if $(git diff --quiet --exit-code); then
            echo "Helm chart docs up to date"
          else
            echo "Helm chart docs not up to date:"
            git diff
          fi
  
  verify-license-headers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: "Check for files without a license header"
        run: |-
          # checks all java, yaml, kts and sql files for an Apache 2.0 license header
          cmd="grep -riL \"SPDX-License-Identifier: Apache-2.0\" --include=\*.{java,ts,html,css,yaml,yml,kts,sql,tf} --exclude-dir={.gradle,\*\openapi} --exclude V0_0_1__Init_DidEntry_Schema.sql ." 
          violations=$(eval $cmd | wc -l)
          if [[ $violations -ne 0 ]] ; then
            echo "$violations files without license headers were found:";
            eval $cmd;
            exit 1;
          fi

  verify-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-java
      - name: Run Checkstyle
        run: |
          ./gradlew checkstyleMain checkstyleTest

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ verify-formatting ]
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-java

      - name: Run Unit tests
        run: ./gradlew test testCodeCoverageReport

      # generates coverage-report.md and publishes as checkrun
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
          skip_check_run: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # Publish Coverage Job Summary  # Optional
      - name: Output KPIs from JaCoCo report
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY
          ls
          ls build/reports/jacoco

      # uploads the coverage-report.md artifact  # Optional
      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-markdown
          path: |
            - "*/coverage-results.md"
            - build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
          retention-days: 1

  end-to-end-tests:
    runs-on: ubuntu-latest
    needs: [ verify-formatting ]
    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-java

      - name: Run Integration tests
        run: ./gradlew test -DincludeTags="EndToEndTest"

  postgres-tests:
    runs-on: ubuntu-latest

    needs: [ verify-formatting ]

    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-java

      - name: Run Postgresql E2E tests
        run: ./gradlew test -DincludeTags="PostgresqlIntegrationTest"
